{"version":3,"sources":["components/Header.js","utils/randomMovie.js","components/SearchForm.js","components/Error.js","components/Loader.js","utils/dateConverter.js","components/MovieList.js","components/Pagination.js","utils/getData.js","App.js","variables/variables.js","index.js"],"names":["Header","className","href","randomMovie","moviesList","Math","floor","random","length","SearchForm","getMovies","setSearchBtnRef","searchInputRef","useRef","searchBtnRef","useEffect","current","focus","onSubmit","type","name","placeholder","ref","Error","error","Loader","dateConverter","str","parts","split","MovieList","movies","filter","movie","poster_path","map","key","id","src","alt","title","release_date","vote_average","overview","Pagination","setPage","setMovies","totalPages","page","pageLinks","i","push","onClick","e","preventDefault","setTimeout","click","changePage","getData","url","a","fetch","response","json","data","App","useState","apiKey","baseUrl","undefined","loading","setLoading","setTotalPages","prevQuery","setPrevQuery","setError","inputValue","target","elements","query","value","trim","pageChoice","results","total_results","countOfPages","total_pages","pageLimit","clearState","ReactDOM","render","document","getElementById"],"mappings":"8NAUeA,EARA,kBACb,wBAAIC,UAAU,UACZ,uBAAGA,UAAU,cAAcC,KAAK,cAAhC,2BCiBWC,EArBK,WAClB,IAAMC,EAAa,CACjB,2BACA,2BACA,iCACA,uCACA,iCACA,+DACA,6CACA,uCACA,6CACA,uCACA,8CAIID,EAAcC,EADAC,KAAKC,MAAMD,KAAKE,SAAWH,EAAWI,SAG1D,OAAOL,GCWMM,EA1BI,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACzBC,EAAiBC,mBACjBC,EAAeD,mBAQrB,OANAE,qBAAU,WACRJ,EAAgBG,KACf,IAEHC,qBAAU,kBAAMH,EAAeI,QAAQC,WAGrC,0BAAMhB,UAAU,cAAciB,SAAUR,GACtC,2BACET,UAAU,eACVkB,KAAK,OACLC,KAAK,QACLC,YAAW,gEAAgBlB,IAAhB,QACXmB,IAAKV,IAEP,4BAAQX,UAAU,aAAakB,KAAK,SAASG,IAAKR,GAAlD,oCClBSS,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,uBAAGvB,UAAU,SAASuB,ICSpCC,EATA,kBACb,yBAAKxB,UAAU,UACb,8BACA,8BACA,8BACA,gCCFWyB,EALO,SAAAC,GACpB,IAAIC,EAAQD,EAAIE,MAAM,KACtB,MAAM,GAAN,OAAUD,EAAM,GAAhB,YAAsBA,EAAM,GAA5B,YAAkCA,EAAM,KC2B3BE,EA1BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAChB,yBAAK9B,UAAU,cACZ8B,EACEC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,eACtBC,KAAI,SAAAF,GAAK,OACR,yBAAKhC,UAAU,OAAOmC,IAAKH,EAAMI,IAC/B,yBACEpC,UAAU,aACVqC,IAAG,0DACDL,EAAMC,aAERK,IAAG,UAAKN,EAAMO,MAAX,aAEL,yBAAKvC,UAAU,gBACb,wBAAIA,UAAU,cAAcgC,EAAMO,OAClC,uBAAGvC,UAAU,aAAb,qDACayB,EAAcO,EAAMQ,eAEjC,uBAAGxC,UAAU,aAAb,+CAAmCgC,EAAMS,cACzC,uBAAGzC,UAAU,oBAAoBgC,EAAMU,iBCWpCC,EA/BI,SAAC,GAUlB,IAV8E,IAA1DC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,UAAWhC,EAAqC,EAArCA,aAAciC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAQ5DC,EAAY,GAR2D,WAUpEC,GACPD,EAAUE,KACR,wBAAIlD,UAAU,kBAAkBmC,IAAKc,GACnC,uBACEjD,UACE+C,GAAQE,EACJ,yCACA,0CAENhD,KAAK,IACLkD,QAASJ,GAAQE,EAAI,SAAAG,GAAC,OAAIA,EAAEC,kBAAmB,SAAAD,GAAC,OAnBrC,SAACA,EAAGL,GACrBK,EAAEC,iBACFT,EAAQG,GACRF,EAAU,IACVS,YAAW,kBAAMzC,EAAaE,QAAQwC,WAeoBC,CAAWJ,EAAGH,KAEjEA,MAZAA,EAAI,EAAGA,GAAKH,EAAYG,IAAM,EAA9BA,GAkBT,OAAO,wBAAIjD,UAAU,cAAcgD,ICxBtBS,EANF,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,gBAEKA,EAASC,OAFd,cAERC,EAFQ,yBAGPA,GAHO,2CAAH,sDCiFEC,G,YArEH,WAAO,IAAD,EACCC,mBCbI,oCDadC,EADS,sBAEED,mBCZlB,gFDYOE,EAFS,sBAGYF,mBAAS,IAHrB,mBAGTnC,EAHS,KAGDe,EAHC,OAIcoB,wBAASG,GAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKoBL,wBAASG,GAL7B,mBAKTtB,EALS,KAKGyB,EALH,OAMQN,wBAASG,GANjB,mBAMTrB,EANS,KAMHH,EANG,OAOkBqB,wBAASG,GAP3B,mBAOTI,EAPS,KAOEC,EAPF,OAQUR,wBAASG,GARnB,mBAQT7C,EARS,KAQFmD,EARE,OASwBT,wBAASG,GATjC,mBASTvD,EATS,KASKH,EATL,KAWVD,EAAS,uCAAG,WAAM2C,GAAN,iCAAAO,EAAA,6DAChBP,EAAEC,iBAEIsB,EAAavB,EAAEwB,OAAOC,SAASC,MAAMC,OACrCD,EAAQH,EAAWK,SAEdV,GAAW,GAClB/C,GAAO+C,GAAW,GAEhBW,EAAaH,IAAUN,EAAY5B,EAAQ,GAAKG,EAChDW,EAVU,UAUDS,EAVC,oBAUkBD,EAVlB,kBAUkCY,EAVlC,iBAUgDG,GAVhD,SAWGxB,EAAQC,GAXX,OAWVK,EAXU,OAaVmB,EAAUnB,EAAKoB,cACfrD,EAASiC,EAAKmB,QACdE,EAAerB,EAAKsB,YACpBC,EAAYF,EAAe,GAAK,GAAKA,EAErCG,EAAa,WACjB1C,EAAU,IACV0B,EAAc,GACdD,GAAW,IAGRQ,EAGOI,EAGDA,IACTrC,EAAUf,GACV2C,EAAaK,GACbP,EAAce,GACdZ,OAASN,GACTE,GAAW,KAPXiB,IACAb,EAAS,uFAJTa,IACAb,OAASN,IA1BK,4CAAH,sDAuCf,OACE,yBAAKpE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYS,UAAWA,EAAWC,gBAAiBA,IAClDa,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAY,kBAAC,EAAD,CAAWO,OAAQA,IACrDuC,GAAW,kBAAC,EAAD,OACVA,GAAWvB,EAAa,GACxB,kBAAC,EAAD,CACEC,KAAMA,EACND,WAAYA,EACZF,QAASA,EACTC,UAAWA,EACXhC,aAAcA,OEtExB2E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a814820b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <h1 className=\"header\">\r\n    <a className=\"header-link\" href=\"index.html\">\r\n      Movie Db üé¨\r\n    </a>\r\n  </h1>\r\n);\r\n\r\nexport default Header;\r\n","const randomMovie = () => {\r\n  const moviesList = [\r\n    \"–®—Ä–µ–∫\",\r\n    \"–ü–∏–ª–∞\",\r\n    \"–ß—É–∂–æ–π\",\r\n    \"–ë—ç—Ç–º–µ–Ω\",\r\n    \"–†—ç–º–±–æ\",\r\n    \"–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä\",\r\n    \"–ê–ª–∞–¥–¥–∏–Ω\",\r\n    \"–ê–≤–∞—Ç–∞—Ä\",\r\n    \"–¢–∏—Ç–∞–Ω–∏–∫\",\r\n    \"–°–∏—è–Ω–∏–µ\",\r\n    \"–î—Ä–∞–∫—É–ª–∞\"\r\n  ];\r\n\r\n  const randomIndex = Math.floor(Math.random() * moviesList.length);\r\n  const randomMovie = moviesList[randomIndex];\r\n\r\n  return randomMovie;\r\n};\r\n\r\nexport default randomMovie;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport randomMovie from \"../utils/randomMovie\";\r\n\r\nconst SearchForm = ({ getMovies, setSearchBtnRef }) => {\r\n  const searchInputRef = useRef();\r\n  const searchBtnRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setSearchBtnRef(searchBtnRef);\r\n  }, []);\r\n\r\n  useEffect(() => searchInputRef.current.focus());\r\n\r\n  return (\r\n    <form className=\"search-form\" onSubmit={getMovies}>\r\n      <input\r\n        className=\"search-input\"\r\n        type=\"text\"\r\n        name=\"query\"\r\n        placeholder={`–ù–∞–ø—Ä–∏–º–µ—Ä, ¬´${randomMovie()}¬ª`}\r\n        ref={searchInputRef}\r\n      />\r\n      <button className=\"search-btn\" type=\"submit\" ref={searchBtnRef}>\r\n        –ù–∞–π—Ç–∏\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => <p className=\"error\">{error}</p>;\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","const dateConverter = str => {\r\n  let parts = str.split(\"-\");\r\n  return `${parts[2]}.${parts[1]}.${parts[0]}`;\r\n};\r\n\r\nexport default dateConverter;\r\n","import React from \"react\";\r\nimport dateConverter from \"../utils/dateConverter\";\r\n\r\nconst MovieList = ({ movies }) => (\r\n  <div className=\"movie-list\">\r\n    {movies\r\n      .filter(movie => movie.poster_path)\r\n      .map(movie => (\r\n        <div className=\"card\" key={movie.id}>\r\n          <img\r\n            className=\"card-image\"\r\n            src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${\r\n              movie.poster_path\r\n            }`}\r\n            alt={`${movie.title} poster`}\r\n          />\r\n          <div className=\"card-content\">\r\n            <h3 className=\"card-title\">{movie.title}</h3>\r\n            <p className=\"card-info\">\r\n              –ü—Ä–µ–º—å–µ—Ä–∞: {dateConverter(movie.release_date)}\r\n            </p>\r\n            <p className=\"card-info\">–†–µ–π—Ç–∏–Ω–≥: {movie.vote_average}</p>\r\n            <p className=\"card-description\">{movie.overview}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n  </div>\r\n);\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ setPage, setMovies, searchBtnRef, totalPages, page }) => {\r\n  const changePage = (e, page) => {\r\n    e.preventDefault();\r\n    setPage(page);\r\n    setMovies([]);\r\n    setTimeout(() => searchBtnRef.current.click());\r\n  };\r\n\r\n  const pageLinks = [];\r\n\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageLinks.push(\r\n      <li className=\"pagination-item\" key={i}>\r\n        <a\r\n          className={\r\n            page == i\r\n              ? \"pagination-link pagination-link-active\"\r\n              : \"pagination-link pagination-link-passive\"\r\n          }\r\n          href=\"#\"\r\n          onClick={page == i ? e => e.preventDefault() : e => changePage(e, i)}\r\n        >\r\n          {i}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return <ul className=\"pagination\">{pageLinks}</ul>;\r\n};\r\n\r\nexport default Pagination;\r\n","const getData = async url => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport default getData;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport Error from \"./components/Error\";\r\nimport Loader from \"./components/Loader\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport { api_key, base_url } from \"./variables/variables\";\r\nimport getData from \"./utils/getData\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/media.css\";\r\n\r\nconst App = () => {\r\n  const [apiKey] = useState(api_key);\r\n  const [baseUrl] = useState(base_url);\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [totalPages, setTotalPages] = useState(undefined);\r\n  const [page, setPage] = useState(undefined);\r\n  const [prevQuery, setPrevQuery] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n  const [searchBtnRef, setSearchBtnRef] = useState(undefined);\r\n\r\n  const getMovies = async e => {\r\n    e.preventDefault();\r\n\r\n    const inputValue = e.target.elements.query.value;\r\n    const query = inputValue.trim();\r\n\r\n    if (query) setLoading(true);\r\n    if (error) setLoading(false);\r\n\r\n    const pageChoice = query !== prevQuery ? setPage(1) : page;\r\n    const url = `${baseUrl}&api_key=${apiKey}&query=${query}&page=${pageChoice}`;\r\n    const data = await getData(url);\r\n\r\n    const results = data.total_results;\r\n    const movies = data.results;\r\n    const countOfPages = data.total_pages;\r\n    const pageLimit = countOfPages > 10 ? 10 : countOfPages;\r\n    \r\n    const clearState = () => {\r\n      setMovies([]);\r\n      setTotalPages(0);\r\n      setLoading(false);\r\n    };\r\n\r\n    if (!query) {\r\n      clearState();\r\n      setError(undefined);\r\n    } else if (!results) {\r\n      clearState();\r\n      setError(\"–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω.\");\r\n    } else if (results) {\r\n      setMovies(movies);\r\n      setPrevQuery(query);\r\n      setTotalPages(pageLimit);\r\n      setError(undefined);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <SearchForm getMovies={getMovies} setSearchBtnRef={setSearchBtnRef} />\r\n      {error ? <Error error={error} /> : <MovieList movies={movies} />}\r\n      {loading && <Loader />}\r\n      {!loading && totalPages > 1 && (\r\n        <Pagination\r\n          page={page}\r\n          totalPages={totalPages}\r\n          setPage={setPage}\r\n          setMovies={setMovies}\r\n          searchBtnRef={searchBtnRef}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const api_key = \"3b33b8c8d2c93ecef17e3034abad89bd\";\r\nexport const base_url =\r\n  \"https://api.themoviedb.org/3/search/movie?include_adult=false&language=ru-RU\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}