{"version":3,"sources":["components/MovieList.js","components/Loader.js","components/Pagination.js","components/SearchMovies.js","App.js","index.js"],"names":["MovieList","movies","className","filter","movie","poster_path","map","key","id","src","alt","title","str","parts","split","dateConverter","release_date","vote_average","overview","Loader","Pagination","props","pageLinks","i","push","currentPage","href","onClick","e","preventDefault","changePage","totalPages","SearchMovies","useState","setMovies","undefined","loading","setLoading","setTotalPages","setCurrentPage","prevMovie","setPrevMovie","error","setError","getMovies","a","target","elements","value","url","fetch","request","json","response","total_results","results","total_pages","searchBtnRef","useRef","moviesList","randomMovie","Math","floor","random","length","onSubmit","type","name","placeholder","autoFocus","ref","pageNum","setTimeout","current","click","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3779d703.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MovieList({ movies }) {\r\n  function dateConverter(str) {\r\n    let parts = str.split(\"-\");\r\n    return `${parts[2]}.${parts[1]}.${parts[0]}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies\r\n        .filter(movie => movie.poster_path)\r\n        .map(movie => {\r\n          return (\r\n            <div className=\"card\" key={movie.id}>\r\n              <img\r\n                className=\"card-image\"\r\n                src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${\r\n                  movie.poster_path\r\n                }`}\r\n                alt={movie.title + \" poster\"}\r\n              />\r\n              <div className=\"card-content\">\r\n                <h3 className=\"card-title\">{movie.title}</h3>\r\n                <p className=\"card-info\">\r\n                  Премьера: {dateConverter(movie.release_date)}\r\n                </p>\r\n                <p className=\"card-info\">Рейтинг: {movie.vote_average}</p>\r\n                <p className=\"card-description\">{movie.overview}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction Pagination(props) {\r\n  const pageLinks = [];\r\n\r\n  for (let i = 1; i <= props.totalPages; i++) {\r\n    pageLinks.push(\r\n      <li className=\"pagination-item\" key={i}>\r\n        <a\r\n          className={\r\n            props.currentPage == i\r\n              ? \"pagination-link pagination-link-active\"\r\n              : \"pagination-link pagination-link-passive\"\r\n          }\r\n          href=\"#\"\r\n          onClick={\r\n            props.currentPage == i\r\n              ? e => e.preventDefault()\r\n              : e => props.changePage(e, i)\r\n          }\r\n        >\r\n          {i}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return <ul className=\"pagination\">{pageLinks}</ul>;\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useRef } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport Loader from \"./Loader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst api_key = \"3b33b8c8d2c93ecef17e3034abad89bd\";\r\n\r\nfunction SearchMovies() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [totalPages, setTotalPages] = useState(undefined);\r\n  const [currentPage, setCurrentPage] = useState(undefined);\r\n  const [prevMovie, setPrevMovie] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const getMovies = async e => {\r\n    e.preventDefault();\r\n    const movie = e.target.elements.movie.value;\r\n    if (movie) setLoading(true);\r\n    if (error) setLoading(false);\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${movie}&page=${\r\n      movie !== prevMovie ? setCurrentPage(1) : currentPage\r\n    }&include_adult=false&language=ru-RU`;\r\n    const request = await fetch(url);\r\n    const response = await request.json();\r\n\r\n    if (!movie) {\r\n      setMovies([]);\r\n      setTotalPages(0);\r\n      setError(undefined);\r\n      setLoading(false);\r\n    } else if (!response.total_results) {\r\n      setMovies([]);\r\n      setTotalPages(0);\r\n      setError(\"Фильм не найден.\");\r\n      setLoading(false);\r\n    } else if (response.total_results) {\r\n      setMovies(response.results);\r\n      setTotalPages(response.total_pages > 10 ? 10 : response.total_pages);\r\n      setPrevMovie(movie);\r\n      setError(undefined);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchBtnRef = useRef();\r\n\r\n  function changePage(e, pageNum) {\r\n    e.preventDefault();\r\n    setCurrentPage(pageNum);\r\n    setMovies([]);\r\n    setTimeout(() => searchBtnRef.current.click());\r\n  }\r\n\r\n  const moviesList = [\r\n    \"Шрек\",\r\n    \"Пила\",\r\n    \"Чужой\",\r\n    \"Бэтмен\",\r\n    \"Рэмбо\",\r\n    \"Терминатор\",\r\n    \"Аладдин\",\r\n    \"Аватар\",\r\n    \"Титаник\",\r\n    \"Сияние\",\r\n    \"Дракула\"\r\n  ];\r\n\r\n  const randomIndex = Math.floor(Math.random() * moviesList.length);\r\n  const randomMovie = moviesList[randomIndex];\r\n\r\n  return (\r\n    <>\r\n      <form className=\"search-form\" onSubmit={getMovies}>\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          name=\"movie\"\r\n          placeholder={`Например, «${randomMovie}»`}\r\n          autoFocus\r\n        />\r\n        <button className=\"search-btn\" type=\"submit\" ref={searchBtnRef}>\r\n          Найти\r\n        </button>\r\n      </form>\r\n\r\n      {error ? <p className=\"error\">{error}</p> : <MovieList movies={movies} />}\r\n\r\n      {loading && <Loader />}\r\n\r\n      {loading === false && totalPages > 1 && (\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          currentPage={currentPage}\r\n          changePage={changePage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchMovies;\r\n","import React from \"react\";\r\nimport SearchMovies from \"./components/SearchMovies\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/media.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1 className=\"header\">Movie Db</h1>\r\n      <SearchMovies />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}